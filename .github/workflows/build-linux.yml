name: "Build Linux"

on:
  workflow_call:
    inputs:
      tag_name:
        required: true
        type: string
      release_name:
        required: true
        type: string
      release_body:
        required: true
        type: string
      draft:
        required: false
        type: boolean
        default: true
      prerelease:
        required: false
        type: boolean
        default: false
    secrets:
      CUSTOM_GITHUB_TOKEN:
        required: true

jobs:
  build-linux:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]
        include:
          - target: x86_64-unknown-linux-gnu
            name: "x64"
          - target: aarch64-unknown-linux-gnu
            name: "ARM64"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      # Install dependencies for both x64 and ARM64
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libwebkit2gtk-4.1-dev \
            libjavascriptcoregtk-4.0-dev \
            libjavascriptcoregtk-4.1-dev \
            libsoup2.4-dev \
            libsoup-3.0-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libx11-dev \
            libxdo-dev \
            libxcb-shape0-dev \
            libxcb-xfixes0-dev \
            libfuse2

          # Add ARM64 dependencies for cross-compilation
          if [[ "${{ matrix.target }}" == "aarch64-unknown-linux-gnu" ]]; then
            # Install ARM cross-compiler
            sudo apt-get install -y \
              gcc-aarch64-linux-gnu \
              g++-aarch64-linux-gnu \
              libc6-dev-arm64-cross
            
            # Enable ARM64 architecture
            sudo dpkg --add-architecture arm64
            sudo apt-get update
            
            # Install ARM64 libraries
            sudo apt-get install -y \
              libwebkit2gtk-4.0-dev:arm64 \
              libsoup2.4-dev:arm64 \
              libjavascriptcoregtk-4.0-dev:arm64 \
              libssl-dev:arm64 \
              libgtk-3-dev:arm64 || true
            
            # Create symlinks for pkg-config files
            sudo mkdir -p /usr/lib/aarch64-linux-gnu/pkgconfig
            for lib in javascriptcoregtk-4.0 javascriptcoregtk-4.1 libsoup-2.4 libsoup-3.0 webkitgtk-4.0 webkit2gtk-4.0 webkit2gtk-4.1; do
              if [ ! -f /usr/lib/aarch64-linux-gnu/pkgconfig/${lib}.pc ] && [ -f /usr/lib/x86_64-linux-gnu/pkgconfig/${lib}.pc ]; then
                sudo cp /usr/lib/x86_64-linux-gnu/pkgconfig/${lib}.pc /usr/lib/aarch64-linux-gnu/pkgconfig/
              fi
            done
          fi

      - name: Install frontend dependencies
        run: yarn install

      # Build the app with ARM64 environment vars if needed
      - name: Build Linux App (${{ matrix.name }})
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          PKG_CONFIG_ALLOW_CROSS: ${{ matrix.target == 'aarch64-unknown-linux-gnu' && '1' || '0' }}
          PKG_CONFIG_PATH: ${{ matrix.target == 'aarch64-unknown-linux-gnu' && '/usr/lib/aarch64-linux-gnu/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig' || '' }}
          PKG_CONFIG_PATH_aarch64_unknown_linux_gnu: ${{ matrix.target == 'aarch64-unknown-linux-gnu' && '/usr/lib/aarch64-linux-gnu/pkgconfig' || '' }}
          PKG_CONFIG_SYSROOT_DIR: ${{ matrix.target == 'aarch64-unknown-linux-gnu' && '/' || '' }}
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: ${{ matrix.target == 'aarch64-unknown-linux-gnu' && 'aarch64-linux-gnu-gcc' || '' }}
          CC_aarch64_unknown_linux_gnu: ${{ matrix.target == 'aarch64-unknown-linux-gnu' && 'aarch64-linux-gnu-gcc' || '' }}
          CXX_aarch64_unknown_linux_gnu: ${{ matrix.target == 'aarch64-unknown-linux-gnu' && 'aarch64-linux-gnu-g++' || '' }}
        uses: tauri-apps/tauri-action@v0
        with:
          tagName: ${{ inputs.tag_name }}
          releaseName: "${{ inputs.release_name }} (${{ matrix.name }})"
          releaseBody: ${{ inputs.release_body }}
          releaseDraft: ${{ inputs.draft }}
          prerelease: ${{ inputs.prerelease }}
          args: --bundles deb,appimage --target ${{ matrix.target }}
