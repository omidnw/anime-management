FROM ubuntu:22.04

# Set platform explicitly for ARM64 target
LABEL org.opencontainers.image.description="Tauri Linux ARM64 cross-compilation"

# Install system dependencies including webkit and libsoup libraries
RUN apt-get update && \
  apt-get install -y --no-install-recommends \
  curl \
  wget \
  ca-certificates \
  pkg-config \
  build-essential \
  gnupg \
  gpg-agent \
  dirmngr \
  software-properties-common \
  libssl-dev \
  libgtk-3-dev \
  libwebkit2gtk-4.0-dev \
  libsoup2.4-dev \
  libjavascriptcoregtk-4.0-dev \
  libappindicator3-dev \
  librsvg2-dev \
  gcc-aarch64-linux-gnu \
  g++-aarch64-linux-gnu \
  libc6-dev-arm64-cross \
  libfuse2

# Enable ARM64 architecture
RUN dpkg --add-architecture arm64 && apt-get update

# Install newer webkit and ARM64 versions of libraries
RUN apt-get update && \
  apt-get install -y --no-install-recommends \
  libwebkit2gtk-4.1-dev \
  libjavascriptcoregtk-4.1-dev \
  libsoup-3.0-dev \
  libwebkit2gtk-4.0-dev:arm64 \
  libsoup2.4-dev:arm64 \
  libjavascriptcoregtk-4.0-dev:arm64 \
  libssl-dev:arm64 \
  libgtk-3-dev:arm64 \
  || true

# Install Node.js (LTS) and Yarn
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
  apt-get update && apt-get install -y nodejs && \
  npm install -g yarn

# Set up cross-compilation environment
ENV CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc \
  CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc \
  CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++ \
  PKG_CONFIG_ALLOW_CROSS=1 \
  PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig \
  PKG_CONFIG_PATH_aarch64_unknown_linux_gnu=/usr/lib/aarch64-linux-gnu/pkgconfig \
  PKG_CONFIG_SYSROOT_DIR=/

# Create symlinks for pkg-config files
RUN mkdir -p /usr/lib/aarch64-linux-gnu/pkgconfig && \
  for lib in javascriptcoregtk-4.0 javascriptcoregtk-4.1 libsoup-2.4 libsoup-3.0 webkitgtk-4.0 webkit2gtk-4.0 webkit2gtk-4.1; do \
  if [ ! -f /usr/lib/aarch64-linux-gnu/pkgconfig/${lib}.pc ] && [ -f /usr/lib/x86_64-linux-gnu/pkgconfig/${lib}.pc ]; then \
  echo "Creating symlink for ${lib}.pc" && \
  cp /usr/lib/x86_64-linux-gnu/pkgconfig/${lib}.pc /usr/lib/aarch64-linux-gnu/pkgconfig/; \
  fi \
  done

# Install Rust and Tauri CLI
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Add ARM64 target
RUN rustup target add aarch64-unknown-linux-gnu

# Add target-specific configuration
RUN mkdir -p ~/.cargo && \
  echo '[target.aarch64-unknown-linux-gnu]' > ~/.cargo/config.toml && \
  echo 'linker = "aarch64-linux-gnu-gcc"' >> ~/.cargo/config.toml

# Install Tauri CLI
RUN cargo install tauri-cli

WORKDIR /app

# Add healthcheck to verify environment
HEALTHCHECK --interval=60s --timeout=10s --start-period=5s --retries=3 \
  CMD rustup target list | grep "aarch64-unknown-linux-gnu (installed)" || exit 1